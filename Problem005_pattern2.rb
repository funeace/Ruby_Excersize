# 2520 は 1 から 10 の数字の全ての整数で割り切れる数字であり, そのような数字の中では最小の値である.
# では, 1 から 20 までの整数全てで割り切れる数字の中で最小の正の数はいくらになるか.
# (最小公倍数) = m * n / (最大公約数)からユークリッドの後除法を使う

# ユークリッドの互除法を行うメソッド(商が分子になり、あまりが分母になる（逆かも）)
def make_gcd(a,b)
  if b == 0
    # bが0だったら終了
    return a
  else
    # aじゃなかったらもう一度判定式を呼び直す
    make_gcd(b,a % b)
  end
end

# 最小公倍数(m * n / 最小公約数)を求めるメソッド
def make_lcm(a,b)
  a * b / make_gcd(a,b)
end

# 求める数値を配列で定義
num = (1..20).to_a
# injectでそれぞれの値を計算していく(aが今のanswer、bが求める値)
p num.inject{|a,b| make_lcm(a,b)}
